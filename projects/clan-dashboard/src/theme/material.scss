// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;

@import './variables.dark.scss';
@import './variables.light.scss';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
// @include mat.all-legacy-component-typographies();
//@include mat.legacy-core();
@include mat.core();

$clan-dashboard-typography: mat.define-typography-config();
@include mat.typography-hierarchy($clan-dashboard-typography);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$clan-dashboard-primary: mat.define-palette(mat.$blue-grey-palette);
$clan-dashboard-accent: mat.define-palette(mat.$grey-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$clan-dashboard-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$clan-dashboard-theme-light: mat.define-light-theme(
  (
    color: (
      primary: $clan-dashboard-primary,
      accent: $clan-dashboard-accent,
      warn: $clan-dashboard-warn
    )
  )
);

$destiny-dark-primary: mat.define-palette(mat.$grey-palette, 700, 300, 900);
$destiny-dark-accent: mat.define-palette(mat.$blue-grey-palette, 400);
$destiny-dark-warn: mat.define-palette(mat.$red-palette, 500);

$destiny-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $destiny-dark-primary,
      accent: $destiny-dark-accent,
      warn: $destiny-dark-warn
    )
  )
);

@include mat.all-component-themes($destiny-dark-theme);
@include set-dark-variables($destiny-dark-theme);

@media (prefers-color-scheme: light) {
  @include mat.all-component-themes($clan-dashboard-theme-light);

  @include set-light-variables($clan-dashboard-theme-light);
}


@include mat.card-typography($clan-dashboard-typography);

//@debug map-get($destiny-dark-theme, background);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

.content-wrapper {
  background: var(--app-background-color);
  color: var(--app-text-color);
}
