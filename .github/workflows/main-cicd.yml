#  Name of workflow
name: Main CI/CD

# When workflow is triggered
on:
  # Trigger on push to main
  push:
    branches: [main]

  # Trigger on PR
  pull_request:
    branches: [main]

  # Allows manual trigger
  workflow_dispatch:

# Jobs to carry out
jobs:
  test_and_build:
    name: Test and Build App
    runs-on: ubuntu-latest
    environment: dev
    env:
      API_KEY: ${{ secrets.API_KEY }}
    steps:
      # Get code from repo
      - name: Checkout code
        uses: actions/checkout@v1
      # Install NodeJS
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      # Run npm install and build on our code
      - name: Run Install
        run: npm install
      - name: Run Make Config
        run: npm run config

      - name: Run lint
        run: npm run lint
      - name: Run test
        run: npm run test
      - name: Run build
        run: npm run build-all

  deployment_dev:
    name: Deployment (Dev)
    runs-on: ubuntu-latest
    environment: dev
    env:
      API_KEY: ${{ secrets.API_KEY }}
    needs:
      - test_and_build
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      # Install NodeJS
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      # Run npm install and build on our code
      - run: npm install
      - run: npm run config
      - run: npm run build
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "./dist/clan-dashboard"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.DEV_NETLIFY_SITE_ID }}

  deployment_stage:
    name: Deployment (Stage)
    # Operating system to run job on
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: stage
    env:
      API_KEY: ${{ secrets.API_KEY }}
    needs:
      - test_and_build
      # Steps in job
    steps:
      # Get code from repo
      - name: Checkout code
        uses: actions/checkout@v1
      # Install NodeJS
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      # Run npm install and build on our code
      - run: npm install
      - run: npm run config
      - run: npm run build
      # Deploy to Netlify using our production secrets
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "./dist/clan-dashboard"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.STAGE_NETLIFY_SITE_ID }}

  deployment_prod:
    name: Deployment (Prod)
    runs-on: ubuntu-latest
    # Operating system to run job on
    if: github.ref == 'refs/heads/main'
    environment: production
    env:
      API_KEY: ${{ secrets.API_KEY }}
    needs:
      - test_and_build
      - deployment_stage
      # Steps in job
    steps:
      # Get code from repo
      - name: Checkout code
        uses: actions/checkout@v1
      # Install NodeJS
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      # Run npm install and build on our code
      - run: npm install
      - run: npm run config
      - run: npm run build

      # Deploy to Netlify using our production secrets
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "./dist/clan-dashboard"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
